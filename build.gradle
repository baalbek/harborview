apply plugin: 'java'

apply from: '/home/rcs/opt/java/gradlecommon/depversions.gradle'

group = 'rcstadheim'
archivesBaseName = 'harborview'
version = '2.0'


ext.major = '5'
ext.minor = '3'
ext.parentDist = '/home/rcs/opt/java/harborview/dist'
ext.myLibName = "harborview-${version}"

repositories {
    mavenCentral()
    maven {
        url 'http://clojars.org/repo'
    }
}

configurations {
    aspectjTask
}

sourceSets {
    main {
        java {
            srcDir "src/java"
        }
        resources {
            srcDir "src/resources"
        }
        output.classesDir = 'build/classes'
    }
    test {
        java {
            srcDir "test/java"
        }
        resources {
            srcDir "test/resources"
        }
    }
}


dependencies {
    compile project(':stearnswharf-repos')
    compile project(':netfonds-repos')
    compile project(':koteriku')
    compile project(':oahu')
    compile project(':ranoraraku')
    compile project(':vega')

    //---------------------------------------------------
    //---------------- Clojure clj jars -----------------
    //---------------------------------------------------
    compile "selmer:selmer:$selmerVersion"
    compile "compojure:compojure:$compojureVersion"
    compile "ring:ring-core:$ringVersion"
    compile "ring:ring-jetty-adapter:$ringVersion"
    compile "ring:ring-servlet:$ringVersion"
    compile "clj-json:clj-json:$jsonVersion"
    compile "org.clojure:clojure-contrib:$clojureContribVersion"
    compile "org.clojure:math.numeric-tower:$numericTowerVersion"
    runtime "org.clojure:clojure:$clojureVersion"
    //--------------- END Clojure clj jars --------------

    //------------------- Colt -------------------
    runtime "colt:colt:$coltVersion"

    compile "commons-codec:commons-codec:1.10"
    compile "commons-logging:commons-logging:1.2"

    //------------------- Database -------------------
    runtime "org.mybatis:mybatis:$mybatisVersion"
    runtime "org.postgresql:postgresql:$postgresVersion"

    runtime "log4j:log4j:$log4jVersion"
    runtime "jline:jline:0.9.94"
    //------------------- spring -------------------
    runtime "org.springframework:spring-core:$springVersion"
    runtime "org.springframework:spring-context:$springVersion"
}

task copydeps(type: Copy) {
    into 'dist' from configurations.runtime
}

task setupDist << {
    //ant.symlink(resource: "/usr/local/java/jline-0.9.94.jar", link: "dist/jline-0.9.94.jar")
    ant.symlink(resource: "../src/resources/log4j.xml", link: "dist/log4j.xml")
    ant.symlink(resource: "../src/resources/public", link: "dist/public")
    ant.symlink(resource: "../src/resources/templates", link: "dist/templates")
    ant.symlink(resource: "../src/clojure/harborview", link: "dist/harborview")
    ant.symlink(resource: "../src/resources/koteriku-dbcp.properties", link: "dist/koteriku-dbcp.properties")
    ant.symlink(resource: "../src/resources/koteriku-mybatis.conf.xml", link: "dist/koteriku-mybatis.conf.xml")
}


String clazzPath() {
    def runt = configurations.runtime.files.collect { f ->
        f.name
    }
    def aopt = configurations.aspectjTask.files.collect { f ->
        f.name
    }
    runt.remove(myLibName)

    aopt.each {
        runt.add(it)
    }
    runt.add(".")
    runt.join(" ")
}

task printClazzPath << {
    println clazzPath()
}
jar {
    manifest {
        attributes 'Main-Class': "harborview.webapp"
        attributes 'Class-Path': clazzPath()
    }
    from ("target/classes") include "**/*.class"
}

buildscript {
    repositories {
        mavenLocal()
    }
    dependencies {
        classpath group: 'rcstadheim', name: 'palenque',
                version: '1.0'
    }
}

apply plugin: 'rcstadheim.palenque'

